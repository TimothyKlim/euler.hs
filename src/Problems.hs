module Problems
( solve1
, solve2
) where

-- Multiples of 3 and 5
-- If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
-- 
-- Find the sum of all the multiples of 3 or 5 below 1000.
solve1 :: Int
solve1 = sum [x | x <- [1..pred 1000], x `mod` 3 == 0 || x `mod` 5 == 0]

-- Even Fibonacci numbers
-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
-- 
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- 
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
fib :: Int -> Int -> Int -> [Int]
fib prev curr end = [prev] ++ if curr >= end then
    []
  else
    fib curr (prev + curr) end

solve2 :: Int
solve2 = sum [x | x <- fib 1 2 4000000, x `mod` 2 == 0]
